//
//  KnobStyleKit.swift
//  Groover
//
//  Created by Alex on 5/31/16.
//  Copyright (c) 2016 TCM. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class KnobStyleKit : NSObject {

    //// Drawing Methods

    public class func drawKnob(knobAngle knobAngle: CGFloat = 281, innerKnobAngle: CGFloat = 0) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Image Declarations
        let knobBgPng = UIImage(named: "images/knobBgPng.png")!
        let knobRotatePng = UIImage(named: "images/knobRotatePng.png")!
        let knobRecessionPng = UIImage(named: "images/knobRecessionPng.png")!
        let knobInnerPng = UIImage(named: "images/knobInnerPng.png")!

        //// knobBg Drawing
        let knobBgPath = UIBezierPath(ovalInRect: CGRectMake(0, 0, 245, 245))
        CGContextSaveGState(context)
        knobBgPath.addClip()
        knobBgPng.drawInRect(CGRectMake(-11, -8, knobBgPng.size.width, knobBgPng.size.height))
        CGContextRestoreGState(context)


        //// knobRotate Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 123, 122)
        CGContextRotateCTM(context, -knobAngle * CGFloat(M_PI) / 180)

        let knobRotatePath = UIBezierPath(ovalInRect: CGRectMake(-123, -122, 245, 245))
        CGContextSaveGState(context)
        knobRotatePath.addClip()
        knobRotatePng.drawInRect(CGRectMake(-123, -122, knobRotatePng.size.width, knobRotatePng.size.height))
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)


        //// knobRecession Drawing
        let knobRecessionPath = UIBezierPath(ovalInRect: CGRectMake(0, 0, 245, 245))
        CGContextSaveGState(context)
        knobRecessionPath.addClip()
        knobRecessionPng.drawInRect(CGRectMake(46, 45, knobRecessionPng.size.width, knobRecessionPng.size.height))
        CGContextRestoreGState(context)


        //// innerKnobBg Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 123, 122)
        CGContextRotateCTM(context, -innerKnobAngle * CGFloat(M_PI) / 180)

        let innerKnobBgPath = UIBezierPath(ovalInRect: CGRectMake(-73, -73, 145, 145))
        CGContextSaveGState(context)
        innerKnobBgPath.addClip()
        knobInnerPng.drawInRect(CGRectMake(-73, -73, knobInnerPng.size.width, knobInnerPng.size.height))
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)
    }

}
